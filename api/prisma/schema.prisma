// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id Int @id @default(autoincrement())
  nome String 
  email String @unique
  senha String // adicione ? para não obrigatórios

  conteudo Conteudo[]

  comunidade Comunidade[]

  moderador Moderador?
}

model Conteudo{
  id Int @id @default(autoincrement())
  titulo String
  descricao String
  qtdLikes Int

  usuario Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int @unique

  evento Evento?

  comunidade Comunidade @relation(fields: [comunidadeId], references: [id])
  comunidadeId Int @unique

  canal Canal @relation(fields: [canalId], references: [id])
  canalId Int @unique
}

model Evento{
  id Int @id @default(autoincrement())
  nomeEvento String
  data DateTime
  hora DateTime
  local String

  conteudo Conteudo @relation(fields: [conteudoId], references: [id])
  conteudoId Int @unique
}

model Comunidade{
  id Int @id @default(autoincrement())
  foto String
  nomeComunidade String
  bio String?

  usuario Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int @unique

  conteudos Conteudo[]
}

model Canal{
  id Int @id @default(autoincrement())
  nomeCanal String
  qtdInscritos Int

  conteudos Conteudo[]
}

model Moderador{
  id Int @id @default(autoincrement())

  usuario Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int @unique
}