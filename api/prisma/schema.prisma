// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          Int    @id @default(autoincrement())
  nome        String
  nomeUsuario String @unique
  email       String @unique
  senha       String // adicione ? para não obrigatórios

  postagem Postagem[]

  moderador    Moderador?
  participantes Participante[]
  criadores      Criador[]
}

model Participante {
  id Int @id @default(autoincrement())

  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int     @map("usuario_id")

  comunidades Comunidade[]

  @@map("Participante")
}

model Criador {
  id Int @id @default(autoincrement())

  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int     @map("usuario_id")

  comunidades Comunidade[]

  @@map("Criador")
}

model Conteudo {
  id        Int    @id @default(autoincrement())
  titulo    String
  descricao String
  qtdLikes  Int    @map("qtd_likes")

  evento   Evento?
  video    Video?
  postagem Postagem?
}

model Postagem {
  id Int @id @default(autoincrement())

  conteudo   Conteudo @relation(fields: [conteudoId], references: [id])
  conteudoId Int      @unique @map("conteudo_id")

  comunidade   Comunidade @relation(fields: [comunidadeId], references: [id])
  comunidadeId Int        @map("comunidade_id")

  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int     @map("usuario_id")
}

model Video {
  id       Int    @id @default(autoincrement())
  urlVideo String @map("url_video")

  conteudo   Conteudo @relation(fields: [conteudoId], references: [id])
  conteudoId Int      @unique @map("conteudo_id")

  canal   Canal @relation(fields: [canalId], references: [id])
  canalId Int   @map("canal_id")
}

model Evento {
  id    Int      @id @default(autoincrement())
  data  String
  horario  String
  local String
  imagem String

  conteudo   Conteudo @relation(fields: [conteudoId], references: [id])
  conteudoId Int      @unique @map("conteudo_id")

  moderador   Moderador @relation(fields: [moderadorId], references: [id])
  moderadorId Int       @map("moderador_id")
}

model Comunidade {
  id             Int     @id @default(autoincrement())
  foto           String
  nomeComunidade String  @unique
  bio            String?

  postagens Postagem[]

  participantes Participante[]
  criador       Criador        @relation(fields: [criadorId], references: [id])
  criadorId     Int

  @@map("Comunidade")
}

model Canal {
  id           Int    @id @default(autoincrement())
  foto         String
  nomeCanal    String
  descricao    String
  qtdInscritos Int    @map("qtd_inscritos")

  videos Video[]

  moderador   Moderador @relation(fields: [moderadorId], references: [id])
  moderadorId Int       @map("moderador_id")
}

model Moderador {
  id Int @id @default(autoincrement())

  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int     @unique @map("usuario_id")

  eventos Evento[]
  canais  Canal[]
}
